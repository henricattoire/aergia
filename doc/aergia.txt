*aergia*  *aergia.txt*  snippet manager: v0.3

Author:  Henri Cattoire

1. Installation |aergia-installation|
2. Variables    |aergia-variables|
3. Snippets     |aergia-snippets|
4. Commands     |aergia-commands|
5. Completion   |aergia-completion|

===============================================================================
INSTALLATION                                              *aegria-installation*

>
" pathogen
cd ~/.vim/bundle
git clone https://github.com/henricattoire/aergia.git
<

Or use your favorite package manager to install `aergia`.

===============================================================================
VARIABLES                                                    *aegria-variables*

-------------------------------------------------------------------------------
                                                          *'g:aergia_snippets'*
Default: $HOME . '/.vim/bundle/aergia/snippets'

Location where aergia looks for snippets. You can change it in your `vimrc`.
>
    let g:aergia_snippets = '/path'
<

-------------------------------------------------------------------------------
                                                               *'g:aergia_key'*
Default: '<c-a>'

Specifies the key used to trigger aegria. Setting this to <tab> when you have
other plugins like supertab installed, can cause unexpected behaviour. You can
change it in your `vimrc`.
>
    let g:aergia_key = '<c-j>'
<

===============================================================================
SNIPPETS                                                      *aegria-snippets*

-------------------------------------------------------------------------------
                                                             *'snippet_format'*
Each snippet has its own file. The text used to invoke the snippet is the same
as the filename. Snippets can (but don't have to) contain tags and you can jump
between tags using the same key to invoke a snippet.

>
    def <{name}>():
        """ <{name}>: <{+}> """
        <{+}>
<

-------------------------------------------------------------------------------
                                                               *'snippet_tags'*
Tags are points in your snippet where you can put some text. In aergia, normal
tags just have a `+` between the start and the end of the tag.
>
    <{+}>
<

-------------------------------------------------------------------------------
                                                         *'snippet_named_tags'*
Named tags are tags that occur more than once in your snippet. When you have
set a value for one of these tags, aergia will automatically replace all other
tags with that name for you. Named tags are also default tags. So if you jump to
a named tag and then you jump again, the tag will be replaced with whatever
default (read: name) you gave the tag.
>
    <{name}>
<

-------------------------------------------------------------------------------
                                                       *'snippet_command_tags'*
Command tags are tags that get replaced by the returned value of the command
(read: function). They get executed when you invoke a snippet, before jumping
to the first tag. And they also support naming (see |snippet_named_tags|).
>
    <{$command}> or <{$command=name}>
<
Example where a command tag is used to get the active filename.
>
    <{$expand("%:t")}>
<

===============================================================================
COMMANDS                                                      *aegria-commands*

-------------------------------------------------------------------------------
                                                       *'aergia-commands-info'*
Because aergia is a snippet manager, it provides a simple way to manage your
snippets using commands. You can easily add, edit or remove snippets with
a couple of keystrokes. Commands like edit and remove also auto complete using
the snippets already present on the system (indicated with <tab>).

-------------------------------------------------------------------------------
                                                          *':AergiaAddSnippet'*
This command allows you to interactively add snippets to aergia without having
to leave vim. The snippet can be specific to the filetype of the file you're
currently working in, or you can choose to make it a global snippet.
>
    :AergiaAddSnippet snippet_name
<

-------------------------------------------------------------------------------
                                                         *':AergiaEditSnippet'*
So you've added a new snippet using AergiaAddSnippet but it doesn't work and
now you want to quickfix it. This command allows you to interactively change
a snippet without leaving vim.
>
    :AergiaEditSnippet snippet_na<tab>
<

-------------------------------------------------------------------------------
                                                       *':AergiaRemoveSnippet'*
Removing unused snippets is easy with AergiaRemoveSnippet.
>
    :AergiaRemoveSnippet snippet_na<tab>
<

===============================================================================
COMPLETION                                                  *aegria-completion*

-------------------------------------------------------------------------------
                                                 *'aergia-completion-function'*
For snippet completion, aergia provides the bare minimum. It just has a
completion function and it is up to you how (or if) you want to use it.

Because this might be unknown territory for some people, here are some examples
on how to use the provided function.

Fitting the `vim` completion philosophy, you could create a distinct mapping to
trigger snippet completion.
>
inoremap <c-x><c-a> <c-r>=aergia#completion#AergiaComplete()<cr>
<

You can also tap into completion plugins that have support for custom completion
functions, like mucomplete.
>
let g:mucomplete#user_mappings = {
      \ 'aergia' : "\<c-r>=aergia#completion#AergiaComplete()\<cr>", }
let g:mucomplete#chains = {
  \ 'default' : [ 'aergia', 'path', 'omni', 'keyn', 'dict' ], }
<
